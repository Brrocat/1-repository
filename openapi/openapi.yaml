openapi: 3.0.0
info:
  title: Task API
  version: 1.0.0
  description: API для управления задачами и пользователями
servers:
  - url: http://localhost:8083
    description: Local server
paths:
  /api/tasks:
    get:
      summary: олучить список задач
      responses:
        '200':
           description: Список задач
           content:
             application/json:
               schema:
                 type: array
                 items:
                   $ref: '#/components/schemas/Task'
    post:
      summary: Создать новую задачу
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Задача создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /api/tasks{id}:
    patch:
      summary: Обновить задачу
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
              required: true
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Task'
      responses:
              '200':
                description: Задача обновлена
                content:
                  applications/json:
                    schema:
                      $ref: '#/components/schemas/Task'
    delete:
      summary: Удалить задачу
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Задача удалена
  /api/users:
    get:
      summary: Получить всех пользователей
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Создать нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{id}:
    patch:
      summary: Обновить пользователя по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Пользователь обновлён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Удалить поьзователя по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Пользователь удалён
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        message:
          type: boolean
          required:
            - name
            - message
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password






